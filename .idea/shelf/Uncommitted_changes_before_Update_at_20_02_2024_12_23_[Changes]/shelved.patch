Index: src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia2.giocatore;\r\n\r\nimport it.uniroma2.dicii.ispw.controller.controller_applicativo.CreaPartita.CreaPartitaControllerApplicativo;\r\nimport it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.giocatore.ListaPartiteObserver;\r\nimport it.uniroma2.dicii.ispw.utils.bean.PartitaBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.UserBean;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.SystemException;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.ListCell;\r\nimport javafx.scene.control.ListView;\r\n\r\npublic class ListaPartiteControllerGrafico implements ListaPartiteObserver {\r\n\r\n    @FXML\r\n    private ListView<PartitaBean> listView;\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        listView.setCellFactory(param -> new ListCell<PartitaBean>() {\r\n            @Override\r\n            protected void updateItem(PartitaBean item, boolean empty) {\r\n                super.updateItem(item, empty);\r\n                if (empty || item == null) {\r\n                    setText(null);\r\n                } else {\r\n                    setText(item.getNomeCampo() + \" - \" + item.getIndirizzoCampo() + \" - \" + item.getGiorno() + \" - \" + item.getOraInizio() + \" - \" + item.getStato());\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void update(PartitaBean partita) {\r\n        // Recupera l'elenco delle partite mostrate\r\n        ObservableList<PartitaBean> partitaBeanList = listView.getItems();\r\n        // Controlla se la partita esiste gi√† nella lista\r\n        boolean partitaEsistente = false;\r\n        int index = 0;\r\n        for (int i = 0; i < partitaBeanList.size(); i++) {\r\n            PartitaBean p = partitaBeanList.get(i);\r\n            if (p.getNomeCampo().equals(partita.getNomeCampo()) &&\r\n                    p.getIndirizzoCampo().equals(partita.getIndirizzoCampo()) &&\r\n                    p.getGiorno().equals(partita.getGiorno()) &&\r\n                    p.getOraInizio().equals(partita.getOraInizio())) {\r\n                partitaEsistente = true;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        // Altrimenti, aggiungi una nuova riga alla ListView\r\n        if (partitaEsistente) {\r\n            partitaBeanList.set(index, partita); // Aggiorna il PartitaBean esistente nella lista\r\n        } else {\r\n            partitaBeanList.add(partita); // Aggiungi un nuovo PartitaBean alla lista\r\n        }\r\n    }\r\n\r\n    public void inizializzaLista(CreaPartitaControllerApplicativo controllerApplicativo, UserBean userBean){\r\n        try {\r\n            controllerApplicativo.inizializzaPartite(userBean,this);\r\n        } catch (SystemException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.java b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.java
--- a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.java	(date 1708423347908)
@@ -4,6 +4,7 @@
 import it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.giocatore.ListaPartiteObserver;
 import it.uniroma2.dicii.ispw.utils.bean.PartitaBean;
 import it.uniroma2.dicii.ispw.utils.bean.UserBean;
+import it.uniroma2.dicii.ispw.utils.exceptions.GestoreEccezioni;
 import it.uniroma2.dicii.ispw.utils.exceptions.SystemException;
 import javafx.collections.FXCollections;
 import javafx.collections.ObservableList;
@@ -61,7 +62,7 @@
         try {
             controllerApplicativo.inizializzaPartite(userBean,this);
         } catch (SystemException e) {
-            throw new RuntimeException(e);
+            GestoreEccezioni.getInstance().handleException(e);
         }
     }
 }
Index: src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.giocatore;\r\n\r\nimport it.uniroma2.dicii.ispw.controller.controller_applicativo.CreaPartita.CreaPartitaControllerApplicativo;\r\nimport it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.ControllerGrafico;\r\nimport it.uniroma2.dicii.ispw.utils.ChangePage;\r\nimport it.uniroma2.dicii.ispw.utils.Session;\r\nimport it.uniroma2.dicii.ispw.utils.SessionManager;\r\nimport it.uniroma2.dicii.ispw.utils.bean.*;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.CampoSenzaFotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.FotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.*;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.Parent;\r\n\r\nimport java.io.IOException;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.util.List;\r\n\r\npublic class CreaPartitaControllerGrafico extends ControllerGrafico {\r\n    private IdSessioneBean id;\r\n    private CreaPartitaControllerApplicativo controllerApplicativo; // riferimento all'istanza utilizzata del controller applicativo\r\n    private TabellaPartiteControllerGrafico tabellaPartiteControllerGrafico; // riferimento all'istanza del controller grafico caricato\r\n    @FXML\r\n    public Spinner numGiocatori;\r\n    @FXML\r\n    private Label username;\r\n    @FXML\r\n    private DatePicker sceltaData;\r\n    @FXML\r\n    private ComboBox sceltaCampo;\r\n    @FXML\r\n    private ComboBox sceltaOrario;\r\n    @FXML\r\n    private ScrollPane scrollPane;\r\n\r\n\r\n\r\n    @Override\r\n    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred) {\r\n        try {\r\n        // creo un istanza di controller applicativo\r\n        controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n\r\n        // imposto nome utente nella pagina\r\n        this.id = id;\r\n        SessionManager manager = SessionManager.getSessionManager();\r\n        Session session = manager.getSessionFromId(id);\r\n        GiocatoreBean giocatore = session.getGiocatoreBean();\r\n        username.setText(giocatore.getUsername());\r\n\r\n        // inizializzazione DataPicker\r\n        sceltaData.setPromptText(String.valueOf(LocalDate.now()));\r\n        // Disabilita la selezione dei giorni passati\r\n        sceltaData.setDayCellFactory(picker -> new DateCell() {\r\n            @Override\r\n            public void updateItem(LocalDate date, boolean empty) {\r\n                super.updateItem(date, empty);\r\n                LocalDate today = LocalDate.now();\r\n                // Disabilita i giorni passati\r\n                setDisable(date.isBefore(today));\r\n            }\r\n        });\r\n        sceltaData.valueProperty().addListener((observable, oldValue, newValue) -> {\r\n            // Esegui un'azione quando la data viene selezionata\r\n            if( sceltaCampo.getSelectionModel().getSelectedItem() != null){\r\n                inizializzaSceltaOrario();\r\n                sceltaOrario.getSelectionModel().clearSelection();\r\n            }\r\n        });\r\n\r\n        // inizializzazione sceltaCampo\r\n        ListaNomeCampoBean listaNomeCampoBean = controllerApplicativo.inizializzasceltaCampo();\r\n        List<PartitaCampoBean> listaCampi = listaNomeCampoBean.getLista();\r\n        for (PartitaCampoBean campo : listaCampi) {\r\n            sceltaCampo.getItems().add(campo.getNome() + \" - \" + campo.getIndirizzo());\r\n        }\r\n        // Aggiunta ChangeListener\r\n        sceltaCampo.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {\r\n            // Azione da eseguire quando l'utente seleziona un elemento nella ComboBox\r\n            inizializzaSceltaOrario();\r\n        });\r\n\r\n        // Inizializza numGiocatori\r\n        SpinnerValueFactory<Integer> valueFactory = new SpinnerValueFactory.IntegerSpinnerValueFactory(4, 10, 4, 2);\r\n        numGiocatori.setValueFactory(valueFactory);\r\n\r\n        numGiocatori.valueProperty().addListener((observable, oldValue, newValue) -> {\r\n            if ((int) newValue % 2 != 0) {\r\n                numGiocatori.getValueFactory().setValue((int) newValue + 1);\r\n            }\r\n        });\r\n        // Inizializza Finestra Partite Create\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/it/uniroma2/dicii/ispw/interfacce/interfaccia1/giocatore/crea_partita/TabellaStatoPartite.fxml\"));\r\n            Parent content = loader.load();\r\n            // Imposta il contenuto dello ScrollPane\r\n            scrollPane.setContent(content);\r\n            // Ottieni controller associato al loader\r\n            tabellaPartiteControllerGrafico = loader.getController();\r\n            //inizializza la lista\r\n            tabellaPartiteControllerGrafico.inizializzaLista(controllerApplicativo, new UserBean(username.getText()));\r\n        } catch (IOException | SystemException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public void clickBack() {\r\n        try {\r\n            ChangePage istanza = ChangePage.getChangePage();\r\n            istanza.cambiaPagina(\"/it/uniroma2/dicii/ispw/interfacce/interfaccia1/giocatore/homePage.fxml\",this.id,null,null,null);\r\n        } catch (SystemException e) {\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        }\r\n    }\r\n\r\n    public void inizializzaSceltaOrario() {\r\n        try {\r\n            sceltaOrario.getItems().clear();\r\n            // Otteniamo la stringa selezionata dalla ComboBox\r\n            String campoSelezionato = (String) sceltaCampo.getSelectionModel().getSelectedItem();\r\n\r\n            // Otteniamo il nome e l'indirizzo separatamente dalla stringa selezionata\r\n            String[] partiCampo = campoSelezionato.split(\" - \");\r\n            String nomeCampo = partiCampo[0];\r\n            String indirizzoCampo = partiCampo[1];\r\n\r\n            // prendiamo la data selezionata\r\n            LocalDate giorno = sceltaData.getValue();\r\n            if(giorno == null){\r\n                throw new DataMancanteException();\r\n            }\r\n\r\n            // creiamo il bean PartitaCampoDataBean\r\n            PartitaCampoDataBean richiestaorari = new PartitaCampoDataBean(nomeCampo, indirizzoCampo, sceltaData.getValue());\r\n\r\n            // chiamiamo la funzione inizializzasceltaOrari\r\n            List<LocalTime> orariPossibili = null;\r\n\r\n                orariPossibili = controllerApplicativo.inizializzasceltaOrario(richiestaorari);\r\n\r\n            for (LocalTime orario : orariPossibili) {\r\n                if(giorno.isEqual(LocalDate.now()) && LocalTime.now().isAfter(orario)){\r\n                    // Se la condizione √® vera saltiamo questo orario;\r\n                    continue;\r\n                }\r\n                sceltaOrario.getItems().add(orario);\r\n            }\r\n        } catch (SystemException e) {\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        } catch (DataMancanteException e){\r\n            sceltaData.setValue(LocalDate.now());\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n            inizializzaSceltaOrario();\r\n        }\r\n    }\r\n\r\n    public void clickRichiesta() {\r\n        try {\r\n            // Prendiamo l'input inserito dall'utente\r\n            // Otteniamo il campo\r\n            String campoSelezionato = (String) sceltaCampo.getSelectionModel().getSelectedItem();\r\n            if(campoSelezionato == null){\r\n                throw new CampoMancanteException();\r\n            }\r\n            String[] partiCampo = campoSelezionato.split(\" - \");\r\n            String nomeCampo = partiCampo[0];\r\n            String indirizzoCampo = partiCampo[1];\r\n            // Otteniamo la data\r\n            LocalDate giorno = sceltaData.getValue();\r\n            if(giorno == null){\r\n                throw new DataMancanteException();\r\n            }\r\n            // Otteniamo l'orario selezionato\r\n            LocalTime orarioInizio = (LocalTime) sceltaOrario.getSelectionModel().getSelectedItem();\r\n\r\n            // Creiamo una RichiestaPartitaBean\r\n            RichiestaPartitaBean richiesta = new RichiestaPartitaBean(nomeCampo, indirizzoCampo, giorno, orarioInizio, (Integer) numGiocatori.getValue(), username.getText());\r\n            // prendiamo un istanza di controller\r\n            controllerApplicativo.inviaRichiesta(richiesta);\r\n\r\n        } catch (SystemException | CampoMancanteException | DataMancanteException | RichiestaPartitaException e) {\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        }\r\n    }\r\n\r\n    public void clickAggiorna() {\r\n        // Aggiorniamo la la lista delle partite visualizzate\r\n        try {\r\n            controllerApplicativo.aggiornaRichieste();\r\n        } catch (SystemException e) {\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java
--- a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java	(date 1708427542762)
@@ -17,6 +17,8 @@
 import java.io.IOException;
 import java.time.LocalDate;
 import java.time.LocalTime;
+import java.time.format.DateTimeFormatter;
+import java.time.format.DateTimeParseException;
 import java.util.List;
 
 public class CreaPartitaControllerGrafico extends ControllerGrafico {
@@ -103,6 +105,9 @@
             tabellaPartiteControllerGrafico.inizializzaLista(controllerApplicativo, new UserBean(username.getText()));
         } catch (IOException | SystemException e) {
             throw new RuntimeException(e);
+        }catch (DateTimeParseException e){
+            DataFormatoErratoException f = new DataFormatoErratoException();
+            GestoreEccezioni.getInstance().handleException(f);
         }
     }
 
@@ -153,6 +158,11 @@
             sceltaData.setValue(LocalDate.now());
             GestoreEccezioni.getInstance().handleException(e);
             inizializzaSceltaOrario();
+        } catch (DateTimeParseException e){
+            sceltaData.setValue(LocalDate.now());
+            DataFormatoErratoException f = new DataFormatoErratoException();
+            GestoreEccezioni.getInstance().handleException(f);
+            inizializzaSceltaOrario();
         }
     }
 
@@ -168,20 +178,34 @@
             String nomeCampo = partiCampo[0];
             String indirizzoCampo = partiCampo[1];
             // Otteniamo la data
-            LocalDate giorno = sceltaData.getValue();
+            LocalDate giorno = LocalDate.parse(sceltaData.getValue().toString());
             if(giorno == null){
                 throw new DataMancanteException();
             }
             // Otteniamo l'orario selezionato
             LocalTime orarioInizio = (LocalTime) sceltaOrario.getSelectionModel().getSelectedItem();
+            if(orarioInizio == null){
+                throw new OrarioNonSelezionatoExcption();
+            }
 
             // Creiamo una RichiestaPartitaBean
             RichiestaPartitaBean richiesta = new RichiestaPartitaBean(nomeCampo, indirizzoCampo, giorno, orarioInizio, (Integer) numGiocatori.getValue(), username.getText());
             // prendiamo un istanza di controller
             controllerApplicativo.inviaRichiesta(richiesta);
-
-        } catch (SystemException | CampoMancanteException | DataMancanteException | RichiestaPartitaException e) {
+            // mostriamo un box di successo
+            Alert alert = new Alert(Alert.AlertType.INFORMATION);
+            alert.setTitle("Successo");
+            alert.setHeaderText(null);
+            alert.setContentText("La richiesta di partita √® stata inviata con successo!");
+            alert.showAndWait();
+        } catch (SystemException | CampoMancanteException | DataMancanteException | RichiestaPartitaException |
+                 OrarioNonSelezionatoExcption e) {
             GestoreEccezioni.getInstance().handleException(e);
+        } catch (DateTimeParseException e){
+            sceltaData.setValue(LocalDate.now());
+            DataFormatoErratoException f = new DataFormatoErratoException();
+            GestoreEccezioni.getInstance().handleException(f);
+            inizializzaSceltaOrario();
         }
     }
 
Index: src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia2.proprietario;\r\n\r\nimport it.uniroma2.dicii.ispw.Main;\r\nimport it.uniroma2.dicii.ispw.controller.controller_applicativo.CreaPartita.CreaPartitaControllerApplicativo;\r\nimport it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.ControllerGrafico;\r\nimport it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.proprietario.RigaRichiestaPartitaControllerGrafico;\r\nimport it.uniroma2.dicii.ispw.model.partita.statoPartita;\r\nimport it.uniroma2.dicii.ispw.utils.ChangePage;\r\nimport it.uniroma2.dicii.ispw.utils.Session;\r\nimport it.uniroma2.dicii.ispw.utils.SessionManager;\r\nimport it.uniroma2.dicii.ispw.utils.bean.*;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.CampoSenzaFotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.FotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.GestoreEccezioni;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.SystemException;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ListCell;\r\nimport javafx.scene.control.ListView;\r\n\r\nimport java.util.List;\r\n\r\npublic class GestisciPrenotazioniControllerGrafico extends ControllerGrafico {\r\n\r\n    private IdSessioneBean id;\r\n    @FXML\r\n    private Button profilo;\r\n    @FXML\r\n    private ListView<PartitaBean> listview;\r\n\r\n    @Override\r\n    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred) throws SystemException {\r\n        this.id=id;\r\n        SessionManager manager=SessionManager.getSessionManager();\r\n        Session session=manager.getSessionFromId(id);\r\n        ProprietarioBean proprietarioBean=session.getProprietarioBean();\r\n        String nome=proprietarioBean.getUsername();\r\n        profilo.setText(nome);\r\n\r\n        //inizializza la lista\r\n        listview.setCellFactory(param -> new ListCell<PartitaBean>() {\r\n            @Override\r\n            protected void updateItem(PartitaBean item, boolean empty) {\r\n                super.updateItem(item, empty);\r\n                if (empty || item == null) {\r\n                    setText(null);\r\n                } else {\r\n                    setText(item.getNomeCampo() + \" - \" + item.getIndirizzoCampo() + \" - \" + item.getGiorno() + \" - \" + item.getOraInizio() + \" - \" + item.getStato());\r\n                }\r\n            }\r\n        });\r\n        inizializzalista();\r\n    }\r\n\r\n    public void clickRifiuta(ActionEvent actionEvent) {\r\n        PartitaBean partitaSelezionata = listview.getSelectionModel().getSelectedItem();\r\n        partitaSelezionata.setStato(statoPartita.Rifiutata);\r\n        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n        try {\r\n            controllerApplicativo.rispondiRichiesta(partitaSelezionata);\r\n        } catch (SystemException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        listview.getItems().remove(partitaSelezionata);\r\n    }\r\n\r\n    public void clickAccetta(ActionEvent actionEvent) {\r\n        PartitaBean partitaSelezionata = listview.getSelectionModel().getSelectedItem();\r\n        partitaSelezionata.setStato(statoPartita.Accettata);\r\n        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n        try {\r\n            controllerApplicativo.rispondiRichiesta(partitaSelezionata);\r\n        } catch (SystemException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        listview.getItems().remove(partitaSelezionata);\r\n    }\r\n\r\n    public void back(ActionEvent actionEvent) {\r\n        try {\r\n            ChangePage istanza = ChangePage.getChangePage();\r\n            istanza.cambiaPagina(\"/it/uniroma2/dicii/ispw/interfacce/interfaccia2/proprietario/homePage.fxml\", this.id, null, null,null);\r\n        } catch (SystemException e) {\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        }\r\n    }\r\n\r\n    public void inizializzalista(){\r\n        // creiamo il bean per indicare il proprietario\r\n        UserBean proprietario = new UserBean(profilo.getText());\r\n        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n        List<PartitaBean> lista = null;\r\n        try {\r\n            lista = controllerApplicativo.inizializzaRichiesteProprietario(proprietario);\r\n        } catch (SystemException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        for (PartitaBean partita : lista){\r\n            // Controlla se partita √® all'interno della listview\r\n            boolean alreadyInList = false;\r\n            for (PartitaBean item : listview.getItems()) {\r\n                if (partita.equals(item)) {\r\n                    alreadyInList = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Aggiungi la partita se non √® presente nella listview\r\n            if (!alreadyInList) {\r\n                listview.getItems().add(partita);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.java b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.java
--- a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.java	(date 1708428125047)
@@ -12,15 +12,14 @@
 import it.uniroma2.dicii.ispw.utils.bean.interfaccia1.CampoSenzaFotoBean;
 import it.uniroma2.dicii.ispw.utils.bean.interfaccia1.FotoBean;
 import it.uniroma2.dicii.ispw.utils.exceptions.GestoreEccezioni;
+import it.uniroma2.dicii.ispw.utils.exceptions.RichiestaNonSelezionataException;
 import it.uniroma2.dicii.ispw.utils.exceptions.SystemException;
 import javafx.collections.FXCollections;
 import javafx.event.ActionEvent;
 import javafx.fxml.FXML;
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Node;
-import javafx.scene.control.Button;
-import javafx.scene.control.ListCell;
-import javafx.scene.control.ListView;
+import javafx.scene.control.*;
 
 import java.util.List;
 
@@ -33,7 +32,7 @@
     private ListView<PartitaBean> listview;
 
     @Override
-    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred) throws SystemException {
+    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred) {
         this.id=id;
         SessionManager manager=SessionManager.getSessionManager();
         Session session=manager.getSessionFromId(id);
@@ -57,27 +56,80 @@
     }
 
     public void clickRifiuta(ActionEvent actionEvent) {
-        PartitaBean partitaSelezionata = listview.getSelectionModel().getSelectedItem();
-        partitaSelezionata.setStato(statoPartita.Rifiutata);
-        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
-        try {
-            controllerApplicativo.rispondiRichiesta(partitaSelezionata);
+        try {
+            PartitaBean partitaSelezionata = listview.getSelectionModel().getSelectedItem();
+            if( partitaSelezionata == null){
+                throw new RichiestaNonSelezionataException();
+            }
+            partitaSelezionata.setStato(statoPartita.Rifiutata);
+            CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
+                controllerApplicativo.rispondiRichiesta(partitaSelezionata);
+
+            listview.getItems().remove(partitaSelezionata);
+            // Deseleziona la riga attualmente selezionata
+            listview.getSelectionModel().clearSelection();
         } catch (SystemException e) {
             throw new RuntimeException(e);
+        } catch (RichiestaNonSelezionataException e) {
+            // Mostra una Dialog per chiedere all'utente se si riferisce alla prima riga della lista
+            Dialog<ButtonType> dialog = new Dialog<>();
+            dialog.setTitle("Richiesta non selezionata");
+            dialog.setContentText("Vuoi selezionare automaticamente la prima riga della lista?");
+            ButtonType siButton = new ButtonType("Si", ButtonBar.ButtonData.OK_DONE);
+            ButtonType noButton = new ButtonType("No", ButtonBar.ButtonData.CANCEL_CLOSE);
+            dialog.getDialogPane().getButtonTypes().addAll(siButton, noButton);
+
+            // Gestisci l'evento del pulsante "Si"
+            dialog.setResultConverter(button -> {
+                if (button == siButton) {
+                    listview.getSelectionModel().selectFirst(); // Seleziona la prima riga della lista
+                    clickAccetta(actionEvent); // Richiama la funzione clickAccetta nuovamente
+                }
+                return null;
+            });
+
+            // Mostra la Dialog
+            dialog.showAndWait();
         }
-        listview.getItems().remove(partitaSelezionata);
     }
 
     public void clickAccetta(ActionEvent actionEvent) {
-        PartitaBean partitaSelezionata = listview.getSelectionModel().getSelectedItem();
-        partitaSelezionata.setStato(statoPartita.Accettata);
-        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
-        try {
+        try {
+            PartitaBean partitaSelezionata = listview.getSelectionModel().getSelectedItem();
+            if(partitaSelezionata == null){
+                throw new RichiestaNonSelezionataException();
+            }
+            partitaSelezionata.setStato(statoPartita.Accettata);
+            CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
+
             controllerApplicativo.rispondiRichiesta(partitaSelezionata);
+
+            listview.getItems().remove(partitaSelezionata);
+            // Deseleziona la riga attualmente selezionata
+            listview.getSelectionModel().clearSelection();
         } catch (SystemException e) {
             throw new RuntimeException(e);
+        } catch (RichiestaNonSelezionataException e) {
+            // Mostra una Dialog per chiedere all'utente se si riferisce alla prima riga della lista
+            Dialog<ButtonType> dialog = new Dialog<>();
+            dialog.setTitle("Richiesta non selezionata");
+            dialog.setContentText("Vuoi selezionare automaticamente la prima riga della lista?");
+            ButtonType siButton = new ButtonType("Si", ButtonBar.ButtonData.OK_DONE);
+            ButtonType noButton = new ButtonType("No", ButtonBar.ButtonData.CANCEL_CLOSE);
+            dialog.getDialogPane().getButtonTypes().addAll(siButton, noButton);
+
+            // Gestisci l'evento del pulsante "Si"
+            dialog.setResultConverter(button -> {
+                if (button == siButton) {
+                    listview.getSelectionModel().selectFirst(); // Seleziona la prima riga della lista
+                    clickAccetta(actionEvent); // Richiama la funzione clickAccetta nuovamente
+                }
+                return null;
+            });
+
+            // Mostra la Dialog
+            dialog.showAndWait();
         }
-        listview.getItems().remove(partitaSelezionata);
     }
 
     public void back(ActionEvent actionEvent) {
@@ -97,7 +149,7 @@
         try {
             lista = controllerApplicativo.inizializzaRichiesteProprietario(proprietario);
         } catch (SystemException e) {
-            throw new RuntimeException(e);
+            GestoreEccezioni.getInstance().handleException(e);
         }
         for (PartitaBean partita : lista){
             // Controlla se partita √® all'interno della listview
Index: src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.uniroma2.dicii.ispw.utils.exceptions;\r\n\r\npublic class CampoMancanteException extends Exception{\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java b/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java
--- a/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java	(date 1708424025335)
@@ -1,5 +1,6 @@
 package it.uniroma2.dicii.ispw.utils.exceptions;
 
 public class CampoMancanteException extends Exception{
+    public CampoMancanteException(){ super("Selezionare un campo");};
 
 }
Index: src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.java b/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionataException.java
rename from src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.java
rename to src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionataException.java
--- a/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionataException.java	(date 1708427842369)
@@ -1,4 +1,4 @@
 package it.uniroma2.dicii.ispw.utils.exceptions;
 
-public class RichiestaNonSelezionata {
+public class RichiestaNonSelezionataException extends Exception {
 }
Index: src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia2.giocatore;\r\n\r\nimport it.uniroma2.dicii.ispw.controller.controller_applicativo.CreaPartita.CreaPartitaControllerApplicativo;\r\nimport it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.ControllerGrafico;\r\nimport it.uniroma2.dicii.ispw.utils.ChangePage;\r\nimport it.uniroma2.dicii.ispw.utils.Session;\r\nimport it.uniroma2.dicii.ispw.utils.SessionManager;\r\nimport it.uniroma2.dicii.ispw.utils.bean.*;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.CampoSenzaFotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.FotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.GestoreEccezioni;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.RichiestaPartitaException;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.SystemException;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.*;\r\nimport javafx.util.StringConverter;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.util.List;\r\n\r\npublic class CreaPartitaControllerGrafico extends ControllerGrafico {\r\n    @FXML\r\n    public Spinner<LocalTime> OrarioPartita;\r\n    @FXML\r\n    public ComboBox<String> CampoPartita;\r\n    @FXML\r\n    public TextField sceltaData;\r\n\r\n    @FXML\r\n    public Button home;\r\n    public Spinner<Integer> numeroGiocatori;\r\n\r\n    private IdSessioneBean id;\r\n    @FXML\r\n    public Button profilo;\r\n\r\n\r\n    @Override\r\n    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred){\r\n        this.id=id;\r\n        SessionManager manager=SessionManager.getSessionManager();\r\n        Session session=manager.getSessionFromId(id);\r\n        GiocatoreBean giocatoreBean=session.getGiocatoreBean();\r\n        String nome=giocatoreBean.getUsername();\r\n        profilo.setText(nome);\r\n\r\n        // Inizializzazione della scelta campo\r\n        sceltaData.setPromptText(String.valueOf(LocalDate.now()));\r\n\r\n        //inizializza scelta Campo\r\n        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n        ListaNomeCampoBean listaNomeCampoBean = null;\r\n        try {\r\n            listaNomeCampoBean = controllerApplicativo.inizializzasceltaCampo();\r\n        } catch (SystemException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        List<PartitaCampoBean> listaCampi = listaNomeCampoBean.getLista();\r\n        for (PartitaCampoBean campo : listaCampi) {\r\n            CampoPartita.getItems().add(campo.getNome() + \" - \" + campo.getIndirizzo());\r\n        }\r\n        // Aggiunta ChangeListener\r\n        CampoPartita.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {\r\n            // Azione da eseguire quando l'utente seleziona un elemento nella ComboBox\r\n            inizializzaSceltaOrario();\r\n        });\r\n\r\n        // Inizializza scelta Numero Giocatori\r\n        // Inizializza numGiocatori\r\n        SpinnerValueFactory<Integer> valueFactory = new SpinnerValueFactory.IntegerSpinnerValueFactory(4, 10, 4, 2);\r\n        numeroGiocatori.setValueFactory(valueFactory);\r\n\r\n        numeroGiocatori.valueProperty().addListener((observable, oldValue, newValue) -> {\r\n            if ((int) newValue % 2 != 0) {\r\n                numeroGiocatori.getValueFactory().setValue((int) newValue + 1);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void inizializzaSceltaOrario(){\r\n        // Otteniamo la stringa selezionata dalla ComboBox\r\n        String campoSelezionato = (String) CampoPartita.getSelectionModel().getSelectedItem();\r\n\r\n        // Otteniamo il nome e l'indirizzo separatamente dalla stringa selezionata\r\n        String[] partiCampo = campoSelezionato.split(\" - \");\r\n        String nomeCampo = partiCampo[0];\r\n        String indirizzoCampo = partiCampo[1];\r\n\r\n        // creiamo il bean PartitaCampoDataBean\r\n        PartitaCampoDataBean richiestaorari = new PartitaCampoDataBean(nomeCampo, indirizzoCampo, LocalDate.parse(sceltaData.getText()));\r\n\r\n        // chiamiamo la funzione inizializzasceltaOrari\r\n        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n        List<LocalTime> orariPossibili = null;\r\n        try {\r\n            orariPossibili = controllerApplicativo.inizializzasceltaOrario(richiestaorari);\r\n        } catch (SystemException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        // Inizializza lo SpinnerValueFactory\r\n        List<LocalTime> finalOrariPossibili = orariPossibili;\r\n        SpinnerValueFactory<LocalTime> valueFactory = new SpinnerValueFactory<LocalTime>() {\r\n            @Override\r\n            public void decrement(int steps) {\r\n                LocalTime value = getValue();\r\n                int index = finalOrariPossibili.indexOf(value);\r\n                if (index == -1) {\r\n                    index = finalOrariPossibili.size() - 1;\r\n                } else {\r\n                    index = Math.max(0, index - steps);\r\n                }\r\n                setValue(finalOrariPossibili.get(index));\r\n            }\r\n\r\n            @Override\r\n            public void increment(int steps) {\r\n                LocalTime value = getValue();\r\n                int index = finalOrariPossibili.indexOf(value);\r\n                if (index == -1) {\r\n                    index = 0;\r\n                } else {\r\n                    index = Math.min(finalOrariPossibili.size() - 1, index + steps);\r\n                }\r\n                setValue(finalOrariPossibili.get(index));\r\n            }\r\n        };\r\n        valueFactory.setValue(orariPossibili.get(0));\r\n        valueFactory.setConverter(new StringConverter<LocalTime>() {\r\n            @Override\r\n            public String toString(LocalTime object) {\r\n                return object.toString();\r\n            }\r\n\r\n            @Override\r\n            public LocalTime fromString(String string) {\r\n                return LocalTime.parse(string);\r\n            }\r\n        });\r\n        valueFactory.setWrapAround(true); // Permette la navigazione circolare degli orari\r\n        OrarioPartita.setValueFactory(valueFactory);\r\n    }\r\n\r\n    public void inviaRichiesta() {\r\n        // Prendiamo l'input inserito dall'utente\r\n        // Otteniamo il campo\r\n        String campoSelezionato = (String) CampoPartita.getSelectionModel().getSelectedItem();\r\n        String[] partiCampo = campoSelezionato.split(\" - \");\r\n        String nomeCampo = partiCampo[0];\r\n        String indirizzoCampo = partiCampo[1];\r\n        // Otteniamo la data\r\n        LocalDate giorno = LocalDate.parse(sceltaData.getText());\r\n        // Otteniamo l'orario selezionato\r\n        LocalTime orarioInizio = OrarioPartita.getValue();\r\n        // Creiamo una RichiestaPartitaBean\r\n        RichiestaPartitaBean richiesta = new RichiestaPartitaBean(nomeCampo, indirizzoCampo, giorno, orarioInizio, (Integer) numeroGiocatori.getValue(), profilo.getText());\r\n        // prendiamo un istanza di controller\r\n        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n        try {\r\n            controllerApplicativo.inviaRichiesta(richiesta);\r\n        } catch (SystemException e) {\r\n            throw new RuntimeException(e);\r\n        } catch (RichiestaPartitaException e) {\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        }\r\n    }\r\n\r\n    public void clickHome() {\r\n        try {\r\n            ChangePage istanza = ChangePage.getChangePage();\r\n            istanza.cambiaPagina(\"/it/uniroma2/dicii/ispw/interfacce/interfaccia2/giocatore/homePage.fxml\", this.id, null, null,null);\r\n        } catch (SystemException e) {\r\n            e.printStackTrace();\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java
--- a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java	(date 1708427599602)
@@ -8,15 +8,14 @@
 import it.uniroma2.dicii.ispw.utils.bean.*;
 import it.uniroma2.dicii.ispw.utils.bean.interfaccia1.CampoSenzaFotoBean;
 import it.uniroma2.dicii.ispw.utils.bean.interfaccia1.FotoBean;
-import it.uniroma2.dicii.ispw.utils.exceptions.GestoreEccezioni;
-import it.uniroma2.dicii.ispw.utils.exceptions.RichiestaPartitaException;
-import it.uniroma2.dicii.ispw.utils.exceptions.SystemException;
+import it.uniroma2.dicii.ispw.utils.exceptions.*;
 import javafx.fxml.FXML;
 import javafx.scene.control.*;
 import javafx.util.StringConverter;
 
 import java.time.LocalDate;
 import java.time.LocalTime;
+import java.time.format.DateTimeParseException;
 import java.util.List;
 
 public class CreaPartitaControllerGrafico extends ControllerGrafico {
@@ -38,131 +37,162 @@
 
     @Override
     public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred){
-        this.id=id;
-        SessionManager manager=SessionManager.getSessionManager();
-        Session session=manager.getSessionFromId(id);
-        GiocatoreBean giocatoreBean=session.getGiocatoreBean();
-        String nome=giocatoreBean.getUsername();
-        profilo.setText(nome);
+        try {
+            this.id = id;
+            SessionManager manager = SessionManager.getSessionManager();
+            Session session = manager.getSessionFromId(id);
+            GiocatoreBean giocatoreBean = session.getGiocatoreBean();
+            String nome = giocatoreBean.getUsername();
+            profilo.setText(nome);
 
-        // Inizializzazione della scelta campo
-        sceltaData.setPromptText(String.valueOf(LocalDate.now()));
+            // Inizializzazione della scelta campo
+            sceltaData.setPromptText(String.valueOf(LocalDate.now()));
 
-        //inizializza scelta Campo
-        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
-        ListaNomeCampoBean listaNomeCampoBean = null;
-        try {
+            //inizializza scelta Campo
+            CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
+            ListaNomeCampoBean listaNomeCampoBean = null;
+
             listaNomeCampoBean = controllerApplicativo.inizializzasceltaCampo();
-        } catch (SystemException e) {
-            throw new RuntimeException(e);
-        }
-        List<PartitaCampoBean> listaCampi = listaNomeCampoBean.getLista();
-        for (PartitaCampoBean campo : listaCampi) {
-            CampoPartita.getItems().add(campo.getNome() + " - " + campo.getIndirizzo());
-        }
-        // Aggiunta ChangeListener
-        CampoPartita.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
-            // Azione da eseguire quando l'utente seleziona un elemento nella ComboBox
-            inizializzaSceltaOrario();
-        });
+            List<PartitaCampoBean> listaCampi = listaNomeCampoBean.getLista();
+            for (PartitaCampoBean campo : listaCampi) {
+                CampoPartita.getItems().add(campo.getNome() + " - " + campo.getIndirizzo());
+            }
+            // Aggiunta ChangeListener
+            CampoPartita.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
+                // Azione da eseguire quando l'utente seleziona un elemento nella ComboBox
+                inizializzaSceltaOrario();
+            });
 
-        // Inizializza scelta Numero Giocatori
-        // Inizializza numGiocatori
-        SpinnerValueFactory<Integer> valueFactory = new SpinnerValueFactory.IntegerSpinnerValueFactory(4, 10, 4, 2);
-        numeroGiocatori.setValueFactory(valueFactory);
+            // Inizializza scelta Numero Giocatori
+            // Inizializza numGiocatori
+            SpinnerValueFactory<Integer> valueFactory = new SpinnerValueFactory.IntegerSpinnerValueFactory(4, 10, 4, 2);
+            numeroGiocatori.setValueFactory(valueFactory);
 
-        numeroGiocatori.valueProperty().addListener((observable, oldValue, newValue) -> {
-            if ((int) newValue % 2 != 0) {
-                numeroGiocatori.getValueFactory().setValue((int) newValue + 1);
-            }
-        });
+            numeroGiocatori.valueProperty().addListener((observable, oldValue, newValue) -> {
+                if ((int) newValue % 2 != 0) {
+                    numeroGiocatori.getValueFactory().setValue((int) newValue + 1);
+                }
+            });
+        } catch (SystemException e){
+            GestoreEccezioni.getInstance().handleException(e);
+        }
 
     }
 
     public void inizializzaSceltaOrario(){
-        // Otteniamo la stringa selezionata dalla ComboBox
-        String campoSelezionato = (String) CampoPartita.getSelectionModel().getSelectedItem();
+        try {
+            // Otteniamo la stringa selezionata dalla ComboBox
+            String campoSelezionato = (String) CampoPartita.getSelectionModel().getSelectedItem();
+            if(campoSelezionato == null){
+                throw new CampoMancanteException();
+            }
 
-        // Otteniamo il nome e l'indirizzo separatamente dalla stringa selezionata
-        String[] partiCampo = campoSelezionato.split(" - ");
-        String nomeCampo = partiCampo[0];
-        String indirizzoCampo = partiCampo[1];
+            // Otteniamo il nome e l'indirizzo separatamente dalla stringa selezionata
+            String[] partiCampo = campoSelezionato.split(" - ");
+            String nomeCampo = partiCampo[0];
+            String indirizzoCampo = partiCampo[1];
 
-        // creiamo il bean PartitaCampoDataBean
-        PartitaCampoDataBean richiestaorari = new PartitaCampoDataBean(nomeCampo, indirizzoCampo, LocalDate.parse(sceltaData.getText()));
+            // Otteniamo la data inserita
+            LocalDate giorno = LocalDate.parse(sceltaData.getText());
+            if(giorno == null){
+                throw new DataMancanteException();
+            }
+
+            // creiamo il bean PartitaCampoDataBean
+            PartitaCampoDataBean richiestaorari = new PartitaCampoDataBean(nomeCampo, indirizzoCampo, giorno);
 
-        // chiamiamo la funzione inizializzasceltaOrari
-        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
-        List<LocalTime> orariPossibili = null;
-        try {
+            // chiamiamo la funzione inizializzasceltaOrari
+            CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
+            List<LocalTime> orariPossibili = null;
             orariPossibili = controllerApplicativo.inizializzasceltaOrario(richiestaorari);
-        } catch (SystemException e) {
-            throw new RuntimeException(e);
-        }
-        // Inizializza lo SpinnerValueFactory
-        List<LocalTime> finalOrariPossibili = orariPossibili;
-        SpinnerValueFactory<LocalTime> valueFactory = new SpinnerValueFactory<LocalTime>() {
-            @Override
-            public void decrement(int steps) {
-                LocalTime value = getValue();
-                int index = finalOrariPossibili.indexOf(value);
-                if (index == -1) {
-                    index = finalOrariPossibili.size() - 1;
-                } else {
-                    index = Math.max(0, index - steps);
-                }
-                setValue(finalOrariPossibili.get(index));
-            }
+            // Inizializza lo SpinnerValueFactory
+            List<LocalTime> finalOrariPossibili = orariPossibili;
+            SpinnerValueFactory<LocalTime> valueFactory = new SpinnerValueFactory<LocalTime>() {
+                @Override
+                public void decrement(int steps) {
+                    LocalTime value = getValue();
+                    int index = finalOrariPossibili.indexOf(value);
+                    if (index == -1) {
+                        index = finalOrariPossibili.size() - 1;
+                    } else {
+                        index = Math.max(0, index - steps);
+                    }
+                    setValue(finalOrariPossibili.get(index));
+                }
 
-            @Override
-            public void increment(int steps) {
-                LocalTime value = getValue();
-                int index = finalOrariPossibili.indexOf(value);
-                if (index == -1) {
-                    index = 0;
-                } else {
-                    index = Math.min(finalOrariPossibili.size() - 1, index + steps);
-                }
-                setValue(finalOrariPossibili.get(index));
-            }
-        };
-        valueFactory.setValue(orariPossibili.get(0));
-        valueFactory.setConverter(new StringConverter<LocalTime>() {
-            @Override
-            public String toString(LocalTime object) {
-                return object.toString();
-            }
+                @Override
+                public void increment(int steps) {
+                    LocalTime value = getValue();
+                    int index = finalOrariPossibili.indexOf(value);
+                    if (index == -1) {
+                        index = 0;
+                    } else {
+                        index = Math.min(finalOrariPossibili.size() - 1, index + steps);
+                    }
+                    setValue(finalOrariPossibili.get(index));
+                }
+            };
+            valueFactory.setValue(orariPossibili.get(0));
+            valueFactory.setConverter(new StringConverter<LocalTime>() {
+                @Override
+                public String toString(LocalTime object) {
+                    return object.toString();
+                }
 
-            @Override
-            public LocalTime fromString(String string) {
-                return LocalTime.parse(string);
-            }
-        });
-        valueFactory.setWrapAround(true); // Permette la navigazione circolare degli orari
-        OrarioPartita.setValueFactory(valueFactory);
+                @Override
+                public LocalTime fromString(String string) {
+                    return LocalTime.parse(string);
+                }
+            });
+            valueFactory.setWrapAround(true); // Permette la navigazione circolare degli orari
+            OrarioPartita.setValueFactory(valueFactory);
+        } catch (SystemException | CampoMancanteException e) {
+            GestoreEccezioni.getInstance().handleException(e);
+        } catch (DataMancanteException e) {
+            sceltaData.setText(String.valueOf(LocalDate.now()));
+            GestoreEccezioni.getInstance().handleException(e);
+            inizializzaSceltaOrario();
+        } catch (DateTimeParseException e){
+            sceltaData.setText(String.valueOf(LocalDate.now()));
+            DataFormatoErratoException f = new DataFormatoErratoException();
+            GestoreEccezioni.getInstance().handleException(f);
+            inizializzaSceltaOrario();
+        }
     }
 
     public void inviaRichiesta() {
-        // Prendiamo l'input inserito dall'utente
-        // Otteniamo il campo
-        String campoSelezionato = (String) CampoPartita.getSelectionModel().getSelectedItem();
-        String[] partiCampo = campoSelezionato.split(" - ");
-        String nomeCampo = partiCampo[0];
-        String indirizzoCampo = partiCampo[1];
-        // Otteniamo la data
-        LocalDate giorno = LocalDate.parse(sceltaData.getText());
-        // Otteniamo l'orario selezionato
-        LocalTime orarioInizio = OrarioPartita.getValue();
-        // Creiamo una RichiestaPartitaBean
-        RichiestaPartitaBean richiesta = new RichiestaPartitaBean(nomeCampo, indirizzoCampo, giorno, orarioInizio, (Integer) numeroGiocatori.getValue(), profilo.getText());
-        // prendiamo un istanza di controller
-        CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
-        try {
+        try{
+            // Prendiamo l'input inserito dall'utente
+            // Otteniamo il campo
+            String campoSelezionato = (String) CampoPartita.getSelectionModel().getSelectedItem();
+            if(campoSelezionato == null){
+                throw new CampoMancanteException();
+            }
+            String[] partiCampo = campoSelezionato.split(" - ");
+            String nomeCampo = partiCampo[0];
+            String indirizzoCampo = partiCampo[1];
+            // Otteniamo la data
+            LocalDate giorno = LocalDate.parse(sceltaData.getText());
+            // Otteniamo l'orario selezionato
+            LocalTime orarioInizio = OrarioPartita.getValue();
+            // Creiamo una RichiestaPartitaBean
+            RichiestaPartitaBean richiesta = new RichiestaPartitaBean(nomeCampo, indirizzoCampo, giorno, orarioInizio, (Integer) numeroGiocatori.getValue(), profilo.getText());
+            // prendiamo un istanza di controller
+            CreaPartitaControllerApplicativo controllerApplicativo = new CreaPartitaControllerApplicativo();
             controllerApplicativo.inviaRichiesta(richiesta);
-        } catch (SystemException e) {
-            throw new RuntimeException(e);
-        } catch (RichiestaPartitaException e) {
+            // mostriamo un box di successo
+            Alert alert = new Alert(Alert.AlertType.INFORMATION);
+            alert.setTitle("Successo");
+            alert.setHeaderText(null);
+            alert.setContentText("La richiesta di partita √® stata inviata con successo!");
+            alert.showAndWait();
+        } catch (RichiestaPartitaException | SystemException | CampoMancanteException e) {
             GestoreEccezioni.getInstance().handleException(e);
+        } catch (DateTimeParseException e){
+            sceltaData.setText(String.valueOf(LocalDate.now()));
+            DataFormatoErratoException f = new DataFormatoErratoException();
+            GestoreEccezioni.getInstance().handleException(f);
+            inizializzaSceltaOrario();
         }
     }
 
Index: src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataException.java
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataException.java b/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataException.java
deleted file mode 100644
--- a/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataException.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ /dev/null	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
@@ -1,4 +0,0 @@
-package it.uniroma2.dicii.ispw.utils.exceptions;
-
-public class DataException {
-}
Index: src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataFormatoErratoException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataFormatoErratoException.java b/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataFormatoErratoException.java
new file mode 100644
--- /dev/null	(date 1708427194078)
+++ b/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataFormatoErratoException.java	(date 1708427194078)
@@ -0,0 +1,7 @@
+package it.uniroma2.dicii.ispw.utils.exceptions;
+
+public class DataFormatoErratoException extends Exception{
+    public DataFormatoErratoException() {
+        super("Data non valida, sar√† inserita la data odierna");
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"bdebd4d7-a9cb-4f37-a23a-4650a3bf3b34\" name=\"Changes\" comment=\"Gestione dei SystemException e IOException per la prima interfaccia\">\r\n      <change afterPath=\"$PROJECT_DIR$/csv/proprietario.csv\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataMancanteException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaPartitaException.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_applicativo/CreaPartita/CreaPartitaControllerApplicativo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_applicativo/CreaPartita/CreaPartitaControllerApplicativo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartita1ControllerGrafico.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/HomePageControllerGrafico.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/HomePageControllerGrafico.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/ProprietarioDAOCSV.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/ProprietarioDAOCSV.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartita1ControllerGrafico.class\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/HomePage1ControllerGrafico.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/HomePage1ControllerGrafico.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/TabellaPartiteControllerGrafico.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/TabellaPartiteControllerGrafico.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/GestionalePartiteControllerGrafico.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/GestionalePartiteControllerGrafico.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/RigaRichiestaPartitaControllerGrafico.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/RigaRichiestaPartitaControllerGrafico.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"CSS File\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/master\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2c7bIP4CenUynN8yTL9socEXFfE\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/Progetto ISPW da modificare/progetto-ispw/src/main/resources/it/uniroma2/dicii/ispw/immagini&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.6195402&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Progetto ISPW da modificare\\progetto-ispw\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\immagini\" />\r\n      <recent name=\"D:\\Progetto ISPW da modificare\\progetto-ispw\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\interfacce\\interfaccia2\\giocatore\" />\r\n      <recent name=\"D:\\Programma Vero ISPW\\progetto-ispw\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\interfacce\\interfaccia2\\giocatore\" />\r\n      <recent name=\"C:\\Users\\samut\\OneDrive\\Desktop\\progettoISPW\\progetto-ispw\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\immagini\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Progetto ISPW da modificare\\progetto-ispw\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\interfacce\\interfaccia2\\giocatore\\crea_partita\" />\r\n      <recent name=\"C:\\Users\\samut\\OneDrive\\Desktop\\progettoISPW\\progetto-ispw\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\interfacce\\interfaccia2\\proprietario\\gestisci_prenotazioni\" />\r\n      <recent name=\"C:\\Users\\samut\\OneDrive\\Desktop\\progettoISPW\\progetto-ispw\\lib\" />\r\n      <recent name=\"D:\\ISPW\\PlayBasket\\progettoISPW\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\Immagini\" />\r\n      <recent name=\"D:\\ISPW\\PlayBasket\\progettoISPW\\src\\main\\resources\\it\\uniroma2\\dicii\\ispw\\Interfacce\\Interfaccia2\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.uniroma2.dicii.ispw.Main\" />\r\n      <module name=\"progettoISPW\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"it.uniroma2.dicii.ispw.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"bdebd4d7-a9cb-4f37-a23a-4650a3bf3b34\" name=\"Changes\" comment=\"\" />\r\n      <created>1707465484716</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1707465484716</updated>\r\n      <workItem from=\"1707465486005\" duration=\"4061000\" />\r\n      <workItem from=\"1707472455689\" duration=\"30000\" />\r\n      <workItem from=\"1707472552549\" duration=\"4638000\" />\r\n      <workItem from=\"1707481311472\" duration=\"81000\" />\r\n      <workItem from=\"1707581077617\" duration=\"1142000\" />\r\n      <workItem from=\"1707583331254\" duration=\"355000\" />\r\n      <workItem from=\"1707583710884\" duration=\"370000\" />\r\n      <workItem from=\"1707584142427\" duration=\"104000\" />\r\n      <workItem from=\"1707584259834\" duration=\"2162000\" />\r\n      <workItem from=\"1707593600216\" duration=\"2089000\" />\r\n      <workItem from=\"1707732198357\" duration=\"1183000\" />\r\n      <workItem from=\"1707733408404\" duration=\"10469000\" />\r\n      <workItem from=\"1707747763327\" duration=\"9939000\" />\r\n      <workItem from=\"1707758407340\" duration=\"3000\" />\r\n      <workItem from=\"1707811818264\" duration=\"14761000\" />\r\n      <workItem from=\"1707840350726\" duration=\"1128000\" />\r\n      <workItem from=\"1707841579760\" duration=\"157000\" />\r\n      <workItem from=\"1707842518338\" duration=\"124000\" />\r\n      <workItem from=\"1707842663153\" duration=\"1030000\" />\r\n      <workItem from=\"1707844898151\" duration=\"81000\" />\r\n      <workItem from=\"1707849734319\" duration=\"95000\" />\r\n      <workItem from=\"1707849846883\" duration=\"475000\" />\r\n      <workItem from=\"1707862570171\" duration=\"75000\" />\r\n      <workItem from=\"1707898290973\" duration=\"3169000\" />\r\n      <workItem from=\"1707906042166\" duration=\"11926000\" />\r\n      <workItem from=\"1707989010767\" duration=\"25818000\" />\r\n      <workItem from=\"1708023755592\" duration=\"2328000\" />\r\n      <workItem from=\"1708032022776\" duration=\"679000\" />\r\n      <workItem from=\"1708033868606\" duration=\"10000\" />\r\n      <workItem from=\"1708074454604\" duration=\"8825000\" />\r\n      <workItem from=\"1708100641937\" duration=\"72000\" />\r\n      <workItem from=\"1708102394467\" duration=\"47000\" />\r\n      <workItem from=\"1708102452374\" duration=\"1436000\" />\r\n      <workItem from=\"1708120513715\" duration=\"2797000\" />\r\n      <workItem from=\"1708161097864\" duration=\"19949000\" />\r\n      <workItem from=\"1708252363824\" duration=\"17618000\" />\r\n      <workItem from=\"1708343945125\" duration=\"3017000\" />\r\n      <workItem from=\"1708359403454\" duration=\"13248000\" />\r\n      <workItem from=\"1708374878406\" duration=\"6951000\" />\r\n      <workItem from=\"1708414920785\" duration=\"7354000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"aggiornato path file fxml\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707476027454</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707476027454</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Changes by samut\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707476132341</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707476132341</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Cambio pagina\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707748026058</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707748026058</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Continuo parte samuele\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707812072891</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707812072891</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Continuo parte samuele\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707823089185</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707823089185</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Continuo parte samuele\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707837026554</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707837026554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Completata interfaccia crea partita\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708365977457</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708365977457</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Completato seconda interfaccia per il Giocatore\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708371297460</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708371297460</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Completato seconda interfaccia per il Giocatore\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708371306619</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708371306619</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Collegata Interfaccia Proprietario per gestione partite richieste\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708372679496</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708372679496</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Finita implementazione della seconda interfaccia grafica\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708377241144</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708377241144</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Aggiunto DAO gestito tramite files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708378436728</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708378436728</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Finito il DAO gestito tramite files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708378804155</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708378804155</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Eliminati i Model inutili, adesso si utilizza solamente PartitaModel\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708379524911</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708379524911</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Gestione dei SystemException e IOException per la prima interfaccia\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708381362690</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708381362690</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"16\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/..\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"aggiornato path file fxml\" />\r\n    <MESSAGE value=\"Changes by samut\" />\r\n    <MESSAGE value=\"Cambio pagina\" />\r\n    <MESSAGE value=\"Continuo parte samuele\" />\r\n    <MESSAGE value=\"Commit di prova\" />\r\n    <MESSAGE value=\"Completata interfaccia crea partita\" />\r\n    <MESSAGE value=\"Completato seconda interfaccia per il Giocatore\" />\r\n    <MESSAGE value=\"Collegata Interfaccia Proprietario per gestione partite richieste\" />\r\n    <MESSAGE value=\"Finita implementazione della seconda interfaccia grafica\" />\r\n    <MESSAGE value=\"Aggiunto DAO gestito tramite files\" />\r\n    <MESSAGE value=\"Finito il DAO gestito tramite files\" />\r\n    <MESSAGE value=\"Eliminati i Model inutili, adesso si utilizza solamente PartitaModel\" />\r\n    <MESSAGE value=\"Gestione dei SystemException e IOException per la prima interfaccia\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Gestione dei SystemException e IOException per la prima interfaccia\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/.idea/workspace.xml	(date 1708428125147)
@@ -4,29 +4,30 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="bdebd4d7-a9cb-4f37-a23a-4650a3bf3b34" name="Changes" comment="Gestione dei SystemException e IOException per la prima interfaccia">
-      <change afterPath="$PROJECT_DIR$/csv/proprietario.csv" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataMancanteException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaPartitaException.java" afterDir="false" />
+    <list default="true" id="bdebd4d7-a9cb-4f37-a23a-4650a3bf3b34" name="Changes" comment="gestione tutte le eccezioni prima interfaccia giocatore">
+      <change afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataFormatoErratoException.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_applicativo/CreaPartita/CreaPartitaControllerApplicativo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_applicativo/CreaPartita/CreaPartitaControllerApplicativo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartita1ControllerGrafico.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/HomePageControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/HomePageControllerGrafico.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/ProprietarioDAOCSV.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/dao/ProprietarioDAOCSV.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartita1ControllerGrafico.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/DataException.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionataException.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/CreaPartitaControllerGrafico.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/HomePage1ControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/HomePage1ControllerGrafico.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/TabellaPartiteControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/giocatore/TabellaPartiteControllerGrafico.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/GestionalePartiteControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/GestionalePartiteControllerGrafico.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/RigaRichiestaPartitaControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia1/proprietario/RigaRichiestaPartitaControllerGrafico.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/dao/PartitaDAO.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico$2.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/CreaPartitaControllerGrafico.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/HomePageControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/HomePageControllerGrafico.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/ListaPartiteControllerGrafico.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/proprietario/GestisciPrenotazioniControllerGrafico.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/exceptions/CampoMancanteException.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/exceptions/DataException.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/it/uniroma2/dicii/ispw/utils/exceptions/RichiestaNonSelezionata.class" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -165,7 +166,7 @@
       <workItem from="1708343945125" duration="3017000" />
       <workItem from="1708359403454" duration="13248000" />
       <workItem from="1708374878406" duration="6951000" />
-      <workItem from="1708414920785" duration="7354000" />
+      <workItem from="1708414920785" duration="12881000" />
     </task>
     <task id="LOCAL-00001" summary="aggiornato path file fxml">
       <option name="closed" value="true" />
@@ -287,7 +288,23 @@
       <option name="project" value="LOCAL" />
       <updated>1708381362690</updated>
     </task>
-    <option name="localTasksCounter" value="16" />
+    <task id="LOCAL-00016" summary="gestione tutte le eccezioni prima interfaccia giocatore">
+      <option name="closed" value="true" />
+      <created>1708422620044</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1708422620044</updated>
+    </task>
+    <task id="LOCAL-00017" summary="gestione tutte le eccezioni prima interfaccia giocatore">
+      <option name="closed" value="true" />
+      <created>1708422644099</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL-00017" />
+      <option name="project" value="LOCAL" />
+      <updated>1708422644099</updated>
+    </task>
+    <option name="localTasksCounter" value="18" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -322,6 +339,7 @@
     <MESSAGE value="Finito il DAO gestito tramite files" />
     <MESSAGE value="Eliminati i Model inutili, adesso si utilizza solamente PartitaModel" />
     <MESSAGE value="Gestione dei SystemException e IOException per la prima interfaccia" />
-    <option name="LAST_COMMIT_MESSAGE" value="Gestione dei SystemException e IOException per la prima interfaccia" />
+    <MESSAGE value="gestione tutte le eccezioni prima interfaccia giocatore" />
+    <option name="LAST_COMMIT_MESSAGE" value="gestione tutte le eccezioni prima interfaccia giocatore" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia2.giocatore;\r\n\r\nimport it.uniroma2.dicii.ispw.controller.controller_applicativo.CreaPartita.CreaPartitaControllerApplicativo;\r\nimport it.uniroma2.dicii.ispw.controller.controller_grafico.interfaccia1.ControllerGrafico;\r\nimport it.uniroma2.dicii.ispw.utils.ChangePage;\r\nimport it.uniroma2.dicii.ispw.utils.Session;\r\nimport it.uniroma2.dicii.ispw.utils.SessionManager;\r\nimport it.uniroma2.dicii.ispw.utils.bean.CredentialsBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.GiocatoreBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.IdSessioneBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.UserBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.CampoSenzaFotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.bean.interfaccia1.FotoBean;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.GestoreEccezioni;\r\nimport it.uniroma2.dicii.ispw.utils.exceptions.SystemException;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ScrollPane;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class PartiteCreateControllerGrafico extends ControllerGrafico {\r\n\r\n    @FXML\r\n    public Button aggiorna;\r\n    @FXML\r\n    public Button home;\r\n    @FXML\r\n    public ScrollPane scrollpane;\r\n    private IdSessioneBean id;\r\n    @FXML\r\n    public Button profilo;\r\n    private CreaPartitaControllerApplicativo controllerApplicativo;\r\n    private ListaPartiteControllerGrafico listaPartiteControllerGrafico;\r\n\r\n    @Override\r\n    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred) throws SystemException {\r\n        // prendiamo un istanza di controller appliativo\r\n        controllerApplicativo = new CreaPartitaControllerApplicativo();\r\n        // settiamo username utente\r\n        this.id=id;\r\n        SessionManager manager=SessionManager.getSessionManager();\r\n        Session session=manager.getSessionFromId(id);\r\n        GiocatoreBean giocatoreBean=session.getGiocatoreBean();\r\n        String nome=giocatoreBean.getUsername();\r\n        profilo.setText(nome);\r\n        // inizializziamo la lista di partite\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/it/uniroma2/dicii/ispw/interfacce/interfaccia2/giocatore/crea_partita/ListaPartiteCreate.fxml\"));\r\n            Parent content = loader.load();\r\n            // Imposta il contenuto dello ScrollPane\r\n            scrollpane.setContent(content);\r\n            // Ottieni controller associato al loader\r\n            listaPartiteControllerGrafico = loader.getController();\r\n            //inizializza la lista\r\n            listaPartiteControllerGrafico.inizializzaLista(controllerApplicativo, new UserBean(profilo.getText()));\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n    }\r\n\r\n    public void clickHome(ActionEvent actionEvent) {\r\n        try {\r\n            ChangePage istanza = ChangePage.getChangePage();\r\n            istanza.cambiaPagina(\"/it/uniroma2/dicii/ispw/interfacce/interfaccia2/giocatore/homePage.fxml\", this.id, null, null,null);\r\n        } catch (SystemException e) {\r\n            e.printStackTrace();\r\n            GestoreEccezioni.getInstance().handleException(e);\r\n        }\r\n    }\r\n\r\n    public void clickAggiorna() throws SystemException {\r\n        // Aggiorniamo la la lista delle partite visualizzate\r\n        controllerApplicativo.aggiornaRichieste();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.java b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.java
--- a/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.java	(revision fc1da4af8eee4b900730b6d6ac15ef0fb8c232f7)
+++ b/src/main/java/it/uniroma2/dicii/ispw/controller/controller_grafico/interfaccia2/giocatore/PartiteCreateControllerGrafico.java	(date 1708423347950)
@@ -37,7 +37,7 @@
     private ListaPartiteControllerGrafico listaPartiteControllerGrafico;
 
     @Override
-    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred) throws SystemException {
+    public void inizializza(IdSessioneBean id, CampoSenzaFotoBean campoSenzaFoto, FotoBean foto, CredentialsBean cred) {
         // prendiamo un istanza di controller appliativo
         controllerApplicativo = new CreaPartitaControllerApplicativo();
         // settiamo username utente
@@ -58,7 +58,7 @@
             //inizializza la lista
             listaPartiteControllerGrafico.inizializzaLista(controllerApplicativo, new UserBean(profilo.getText()));
         } catch (IOException e) {
-            throw new RuntimeException(e);
+            GestoreEccezioni.getInstance().handleException(e);
         }
 
     }
@@ -68,13 +68,16 @@
             ChangePage istanza = ChangePage.getChangePage();
             istanza.cambiaPagina("/it/uniroma2/dicii/ispw/interfacce/interfaccia2/giocatore/homePage.fxml", this.id, null, null,null);
         } catch (SystemException e) {
-            e.printStackTrace();
             GestoreEccezioni.getInstance().handleException(e);
         }
     }
 
-    public void clickAggiorna() throws SystemException {
+    public void clickAggiorna() {
         // Aggiorniamo la la lista delle partite visualizzate
-        controllerApplicativo.aggiornaRichieste();
+        try {
+            controllerApplicativo.aggiornaRichieste();
+        } catch (SystemException e) {
+            GestoreEccezioni.getInstance().handleException(e);
+        }
     }
 }
